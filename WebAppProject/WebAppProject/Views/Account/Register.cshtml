@model WebAppProject.ViewModels.RegisterVM
@{
    ViewData["Title"] = "Register Page";
}

<!-- Wyświetlanie komunikatu o błędzie rejestracji, jeśli istnieje -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="btn-close text-dark" data-bs-dismiss="alert" aria-label="Close">
        </button>
        @TempData["ErrorMessage"]
    </div>
}

<div class="col-lg-6 mx-auto rounded border p-3">
    <h2 class="text-center mb-3">Registration</h2>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

    <!-- Formularz rejestracyjny -->
    <form asp-action="Register" asp-asp-controller="Account" method="post">
        <div class="form-floating mb-3">
            <input asp-for="userModel.FirstName" class="form-control" placeholder="Jane" />
            <label asp-for="userModel.FirstName">First Name</label>
            <span asp-validation-for="userModel.FirstName" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="userModel.LastName" class="form-control" placeholder="Doe" />
            <label asp-for="userModel.LastName">Last Name</label>
            <span asp-validation-for="userModel.LastName" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input id="dateOfBirth" asp-for="userModel.DateOfBirth" class="form-control" type="date" placeholder="Date of Birth" />
            <label asp-for="userModel.DateOfBirth">Date of Birth</label>
            <span id="dateOfBirthError" class="text-danger" style="display:none;"></span>
            <span asp-validation-for="userModel.DateOfBirth" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="userModel.PESEL" class="form-control" placeholder="PESEL" />
            <label asp-for="userModel.PESEL">PESEL</label>
            <span asp-validation-for="userModel.PESEL" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="userModel.Address" class="form-control" placeholder="Address" />
            <label asp-for="userModel.Address">Address</label>
            <span asp-validation-for="userModel.Address" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="PhoneNumber" class="form-control" placeholder="123 456 789" />
            <label asp-for="PhoneNumber">Phone Number</label>
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="Email" class="form-control" placeholder="name@example.com" />
            <label asp-for="Email">Email</label>
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="Password" class="form-control" placeholder="password" />
            <label asp-for="Password">Password</label>
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3">
            <input asp-for="ConfirmPassword" class="form-control" placeholder="password" />
            <label asp-for="ConfirmPassword">Confirm Password</label>
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
        <div class="row mb-3">
            <div class="offset-sm-2 col-sm-4 d-grid">
                <!-- Przycisk powrotu do strony głównej -->
                <a asp-action="Index" asp-controller="Home" class="btn btn-outline-primary" role="button"><i class="fa-solid fa-arrow-left"></i> Go Back</a>
            </div>
            <div class="col-sm-4 d-grid">
                <!-- Przycisk rejestracji -->
                <button type="submit" class="btn btn-primary">Sign Up</button>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @*Ten kod jest domyślnie załączony w pliku _ValidationScriptsPartial. Ze względu na problemy z poprawnym ładowaniem, kod został umieszczony bezpośrednio tutaj.*@
    
    <script>
        // Dynamiczna walidacja daty urodzenia:

        document.addEventListener('DOMContentLoaded', function () {
            const dateOfBirthInput = document.getElementById('dateOfBirth');
            const dateOfBirthError = document.getElementById('dateOfBirthError');

            if (dateOfBirthInput && dateOfBirthError) {
                dateOfBirthInput.addEventListener('change', validateBirthDate);
            }

            function validateBirthDate() {
                const dateOfBirth = new Date(dateOfBirthInput.value);
                const today = new Date();
                const minDate = new Date(today.getFullYear() - 122, today.getMonth(), today.getDate());

                if (dateOfBirth > today) {
                    dateOfBirthError.style.display = "block";
                    dateOfBirthError.textContent = 'Date of birth cannot be in the future.';
                } else if (dateOfBirth < minDate) {
                    dateOfBirthError.style.display = "block";
                    dateOfBirthError.textContent = 'Date of birth cannot be more than 122 years ago.';
                } else {
                    dateOfBirthError.style.display = "none";
                }
            }
        });
    </script>
}